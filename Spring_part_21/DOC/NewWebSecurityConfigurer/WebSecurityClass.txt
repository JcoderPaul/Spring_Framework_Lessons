См. исходник (ENG):
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/builders/- WebSecurity.html
________________________________________________________________________________________________________________________
****** Class - WebSecurity ******

Пакет: org.springframework.security.config.annotation.web.builders

java.lang.Object
    org.springframework.security.config.annotation.AbstractSecurityBuilder<O>
        org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder<jakarta.servlet.Filter,- WebSecurity>
            org.springframework.security.config.annotation.web.builders.- WebSecurity

Все реализованные интерфейсы: org.springframework.beans.factory.Aware,
                              org.springframework.context.ApplicationContextAware,
                              SecurityBuilder<jakarta.servlet.Filter>,
                              org.springframework.web.context.ServletContextAware
________________________________________________________________________________________________________________________
public final class - WebSecurity
                extends AbstractConfiguredSecurityBuilder<jakarta.servlet.Filter,- WebSecurity>
                    implements SecurityBuilder<jakarta.servlet.Filter>,
                               org.springframework.context.ApplicationContextAware,
                               org.springframework.web.context.ServletContextAware
________________________________________________________________________________________________________________________

- WebSecurity создается - WebSecurityConfiguration -
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/configuration/- WebSecurityConfiguration.html
для создания FilterChainProxy - https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/web/FilterChainProxy.html,
известного, как цепочка фильтров безопасности Spring (springSecurityFilterChain). SpringSecurityFilterChain — это фильтр,
которому делегирует DelegatingFilterProxy.

Настроить - WebSecurity можно путем создания - WebSecurityConfigurer -
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/- WebSecurityConfigurer.html
или предоставления bean-компонента - WebSecurityCustomizer -
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/configuration/- WebSecurityCustomizer.html

________________________________________________________________________________________________________________________
*** Вложенные классы ***

- class - WebSecurity.IgnoredRequestConfigurer - Позволяет регистрировать RequestMatcher экземпляры, которые Spring
                                               Security должен игнорировать.
________________________________________________________________________________________________________________________
*** Конструктор ***

- - WebSecurity(ObjectPostProcessor<Object> objectPostProcessor) - Создает новый экземпляр.

Где, параметр: objectPostProcessor - используемый ObjectPostProcessor.
Смотреть также: - WebSecurityConfiguration -
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/configuration/- WebSecurityConfiguration.html
________________________________________________________________________________________________________________________
*** Методы ***

- WebSecurity addSecurityFilterChainBuilder(SecurityBuilder<? extends SecurityFilterChain> securityFilterChainBuilder) -
                                                       Добавляет сборщиков для создания SecurityFilterChain экземпляров.

- WebSecurity debug(boolean debugEnabled) - Управляет поддержкой отладки Spring Security.

- WebSecurity expressionHandler(SecurityExpressionHandler<FilterInvocation> expressionHandler) - Установите параметр,
                                                              SecurityExpressionHandler который будет использоваться.

- SecurityExpressionHandler<FilterInvocation> getExpressionHandler() - Получает объект SecurityExpressionHandler для
                                                                       использования.

- WebInvocationPrivilegeEvaluator getPrivilegeEvaluator() - Получает объект WebInvocationPrivilegeEvaluator для
                                                            использования.

- WebSecurity httpFirewall(HttpFirewall httpFirewall) - Позволяет настраивать HttpFirewall.

- WebSecurity.IgnoredRequestConfigurer ignoring() - Позволяет добавлять RequestMatcher экземпляры, которые Spring
                                                    Security должен игнорировать.

- protected jakarta.servlet.Filter performBuild() - Подклассы должны реализовать этот метод для построения возвращаемого
                                                    объекта.

- WebSecurity postBuildAction(Runnable postBuildAction) - Выполняет Runnable сразу после завершения сборки.

- WebSecurity privilegeEvaluator(WebInvocationPrivilegeEvaluator privilegeEvaluator) - Установите параметр,
                                              WebInvocationPrivilegeEvaluator который будет использоваться.

- WebSecurity requestRejectedHandler(RequestRejectedHandler requestRejectedHandler) - Устанавливает обработчик для
                                                                                обработки RequestRejectedException

- void setApplicationContext(org.springframework.context.ApplicationContext applicationContext) -

- void setServletContext(jakarta.servlet.ServletContext servletContext)

________________________________________________________________________________________________________________________
Методы, унаследованные от класса org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder:
apply, beforeConfigure, beforeInit, doBuild, getConfigurer, getConfigurers, getOrBuild, getSharedObject,
getSharedObjects, objectPostProcessor, postProcess, removeConfigurer, removeConfigurers, setSharedObject,
with

Методы, унаследованные от класса org.springframework.security.config.annotation.AbstractSecurityBuilder: build,
                                                                                                         getObject

Методы, унаследованные от класса java.lang.Object: clone, equals, finalize, getClass, hashCode, notify, notifyAll,
                                                   toString, wait

Методы, унаследованные от интерфейса org.springframework.security.config.annotation.SecurityBuilder: build
________________________________________________________________________________________________________________________