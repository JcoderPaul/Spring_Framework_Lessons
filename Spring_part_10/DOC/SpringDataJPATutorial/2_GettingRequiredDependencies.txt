Исходник всего материала (ENG):
https://www.petrikainulainen.net/programming/spring-framework/spring-data-jpa-tutorial-getting-the-required-dependencies/

См. настройка Spring проекта: https://start.spring.io/
------------------------------------------------------------------------------------------------------------------------
****** Spring Data JPA Tutorial: Getting the Required Dependencies (Получение необходимых зависимостей) ******

Прежде чем мы сможем создать приложение, использующее Spring Data JPA, нам необходимо получить необходимые зависимости.

Необходимые компоненты мы можем получить с помощью Maven или Gradle.

------------------------------------------------------------------------------------------------------------------------
*** Компоненты которые нам нужны ***

Если мы хотим реализовать уровень персистентности, использующий Spring Data JPA, нам нужны следующие компоненты:
- Драйвер JDBC обеспечивает реализацию API JDBC для конкретной базы данных. Например, мы используем базу данных H2
  в памяти (http://www.h2database.com/html/main.html), поскольку она упрощает запуск нашего примера приложения.
- Источник данных обеспечивает подключение к базе данных нашему приложению. Мы используем источник данных HikariCP
  (https://github.com/brettwooldridge/HikariCP), потому что это самый быстрый источник данных на планете.
- Поставщик JPA реализует API сохранения Java. Мы используем Hibernate (https://hibernate.org/orm/), потому что это
  наиболее распространенный поставщик JPA.
- Spring Data JPA (https://spring.io/projects/spring-data-jpa) скрывает используемого поставщика JPA за абстракцией
  репозитория.

Давайте продолжим и выясним, как мы можем получить необходимые зависимости с помощью Maven.

------------------------------------------------------------------------------------------------------------------------
*** Получение необходимых зависимостей с помощью Maven ***

Мы можем получить необходимые зависимости с помощью Maven, используя один из этих вариантов:
- Мы можем управлять нашими зависимостями с помощью платформы Spring IO (https://spring.io/projects/platform).
  Spring IO — это целостная платформа с поддержкой версий для создания современных приложений. Это модульный
  дистрибутив корпоративного уровня, который предоставляет тщательно подобранный набор зависимостей, позволяя
  разработчикам полностью контролировать развертывание только тех частей, которые им нужны.

  Spring IO — это 100% открытый исходный код, экономичный и модульный.

  !!! ВНИМАНИЕ !!!
  Срок поддержки платформы Spring IO закончится 9 апреля 2019 года. Пользователям платформы рекомендуется начать
  использовать каталог управления зависимостями Spring Boot, либо используя его spring-boot-starter-parent в качестве
  родительского проекта Maven, либо импортировав файл spring-boot-dependencies bom.

  Однако мы можем использовать: https://start.spring.io/

- Мы можем управлять нашими зависимостями «вручную».

Давайте рассмотрим управление нашими зависимостями вручную.

------------------------------------------------------------------------------------------------------------------------
*** Управление нашими зависимостями вручную ***

Если мы управляем нашими зависимостями «вручную», нам необходимо указать номера версий всех зависимостей. Мы можем
сделать это, добавив следующие объявления зависимостей в раздел зависимостей нашего файла pom.xml:

************************************************************************************************************************
<!-- Database (H2) -->
<dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <version>1.4.185</version>
</dependency>

<!-- DataSource (HikariCP) -->
<dependency>
    <groupId>com.zaxxer</groupId>
    <artifactId>HikariCP</artifactId>
    <version>2.2.5</version>
</dependency>

<!-- JPA Provider (Hibernate) -->
<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-entitymanager</artifactId>
    <version>4.3.8.Final</version>
</dependency>

<!-- Spring Data JPA -->
<dependency>
    <groupId>org.springframework.data</groupId>
    <artifactId>spring-data-jpa</artifactId>
    <version>1.7.2.RELEASE</version>
</dependency>
************************************************************************************************************************

Использовались версии зависимостей, которые предоставляет платформа Spring IO (или ее аналог https://start.spring.io/).
Если вы хотите использовать более новые версии, вы можете найти последние доступные версии на сайте
https://mvnrepository.com/.

При использовании Gradle в качестве примера можно изучить наш build.gradle.

------------------------------------------------------------------------------------------------------------------------
И так мы должны усвоить четыре вещи:

- Если мы хотим реализовать уровень персистентности, использующий Spring Data JPA, нам нужны следующие компоненты:
  - Драйвер JDBC,
  - Источник данных,
  - Поставщик JPA,
  - Spring Data JPA.
- Мы должны получить необходимые зависимости, и при необходимости управлять нашими зависимостями вручную.
- Если мы начинаем новый проект, нам следует использовать платформу Spring IO (https://start.spring.io/),
  поскольку она гарантирует, что наши зависимости будут работать вместе как шар.
- Если мы добавляем Spring Data JPA в существующий проект, нам следует управлять нашими зависимостями вручную,
  поскольку это требует меньше работы.

------------------------------------------------------------------------------------------------------------------------
Как настроить Spring Data JPA см. тут: DOC/SpringDataJPATutorial/3_SpringDataJPAConfiguration.txt