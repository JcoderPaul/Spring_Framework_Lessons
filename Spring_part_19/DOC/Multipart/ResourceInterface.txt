См. исходник (ENG):
https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/io/Resource.html
________________________________________________________________________________________________________________________
****** Interface Resource ******

Пакет: org.springframework.core.io

Все супер-интерфейсы: InputStreamSource

Все известные под-интерфейсы: ContextResource,
                              HttpResource,
                              HttpResource,
                              WritableResource

Все известные реализующие классы: AbstractFileResolvingResource,
                                  AbstractResource,
                                  ByteArrayResource,
                                  ClassPathResource,
                                  DefaultResourceLoader.ClassPathContextResource,
                                  DescriptiveResource,
                                  FileSystemResource,
                                  FileUrlResource,
                                  InputStreamResource,
                                  ModuleResource,
                                  PathResource,
                                  ServletContextResource,
                                  TransformedResource,
                                  TransformedResource,
                                  UrlResource,
                                  VfsResource

Изучить так же и: InputStreamSource.getInputStream(),
                  getURL(),
                  getURI(),
                  getFile(),
                  WritableResource,
                  ContextResource,
                  UrlResource,
                  FileUrlResource,
                  FileSystemResource,
                  ClassPathResource,
                  ByteArrayResource,
                  InputStreamResource
________________________________________________________________________________________________________________________
public interface Resource extends InputStreamSource
________________________________________________________________________________________________________________________

Интерфейс для дескриптора ресурса, который абстрагируется от фактического типа базового ресурса, такого как ресурс файла
или пути к классу. Входной поток можно открыть для каждого ресурса, если он существует в физической форме, но для
определенных ресурсов можно просто вернуть URL-адрес или дескриптор файла. Фактическое поведение зависит от реализации.
________________________________________________________________________________________________________________________
*** Методы ***

- long contentLength() - Определите длину контента для этого ресурса.

- Resource createRelative(String relativePath) - Создайте ресурс относительно этого ресурса.

- boolean exists() - Определите, существует ли этот ресурс на самом деле в физической форме. Этот метод выполняет
                     окончательную проверку существования, тогда как наличие дескриптора Resource гарантирует только
                     действительный дескриптор дескриптора.

- default byte[] getContentAsByteArray() - Верните содержимое этого ресурса в виде массива байтов.

- default String getContentAsString(Charset charset) - Верните содержимое этого ресурса в виде строки, используя
                                                       указанную кодировку.

- String getDescription() - Возвращает описание этого ресурса, которое будет использоваться для вывода ошибок при
                            работе с ресурсом.

- File getFile() - Верните дескриптор файла для этого ресурса.

- String getFilename() - Определите имя файла для этого ресурса — обычно это последняя часть пути,
                         например "myfile.txt".

- URI getURI() - Верните дескриптор URI для этого ресурса.

- URL getURL() - Верните дескриптор URL-адреса этого ресурса.

- default boolean isFile() - Определите, представляет ли этот ресурс файл в файловой системе. Значение true настоятельно
                             предполагает (но не гарантирует), что getFile() вызов будет успешным. Метод консервативен -
                             false по умолчанию.

- default boolean isOpen() - Укажите, представляет ли этот ресурс дескриптор открытого потока. Если true, входной поток
                             не может быть прочитан несколько раз и должен быть прочитан и закрыт во избежание утечек
                             ресурсов.

                             Будет false для типичных дескрипторов ресурсов.

- default boolean isReadable() - Укажите, можно ли прочитать непустое содержимое этого ресурса через
                                 InputStreamSource.getInputStream(). Будет true для типичных существующих дескрипторов
                                 ресурсов, поскольку это строго подразумевает exists() семантику начиная с версии 5.1.

                                 Обратите внимание, что фактическое чтение контента все равно может завершиться
                                 неудачей при попытке. Однако значение false является точным указанием на то, что
                                 содержимое ресурса не может быть прочитано.

- long lastModified() - Определите временную метку последнего изменения для этого ресурса.

________________________________________________________________________________________________________________________
- default ReadableByteChannel readableChannel() - Вернуть ReadableByteChannel. Ожидается, что каждый вызов создает
                                                  новый канал.

                                                  Реализация по умолчанию возвращает Channels.newChannel(InputStream) -
                                                  результат InputStreamSource.getInputStream().

Возвращает: байтовый канал для базового ресурса (не должен быть null)
Броски исключений:
- FileNotFoundException- если базовый ресурс не существует;
- IOException- если канал контента не удалось открыть;
________________________________________________________________________________________________________________________