См. исходник (RUS): https://habr.com/ru/articles/483328/
См. оригинал (ENG): https://www.springboottutorial.com/rest-api-what-is-hateoas
________________________________________________________________________________________________________________________
****** REST API — Что такое HATEOAS? ******

При просмотре веб-страницы вы можете просматривать данные на странице и выполнять с ними действия.

Как насчет REST API? Как правило, когда вы запрашиваете REST ресурс, вы получаете информацию о ресурсе обратно. Как
насчет отправки операций, которые вы можете сделать с ресурсом в ответе?

________________________________________________________________________________________________________________________
*** Что означает HATEOAS? ***

Термин HATEOAS означает фразу «Hypermedia As The Engine Of Application State» (Гипермедиа как двигатель состояния
приложения). Чтобы понять это глубже, нам сначала нужно понять значение гипермедиа. Взгляните на следующую веб-страницу:
см. DOC/REST_API/ARTICLE_IMAGE/5_IMG_13_HATEOAS.png

Когда браузер загружает страницу, вы определенно можете увидеть весь контент, который может предложить эта страница.
Что еще более интересно, страница также позволяет вам выполнять множество действий с этими данными, например:
- Нажатие на кнопки (зеленое «Clone» (Клонировать) или «Download» (Скачать);
- Нажатие на вкладки (например, для просмотра «Issues» (Проблемы));
- и т.д.;

Теперь давайте посмотрим, как ведут себя наши REST API. Если вы посмотрите на типичный запрос GET к RESTful серверу,
такой как этот: см. DOC/REST_API/ARTICLE_IMAGE/5_IMG_14_GET_REQUEST.png

Запрос GET к localhost:8080/users - получает набор данных трех пользователей в этом случае. Отправив запрос с помощью
GET к localhost:8080/users/1 - вы получите сведения только о первом пользователе. Как правило, когда мы выполняем
запрос REST, мы получаем только данные, а не какие-либо действия с ними.

Вот где HATEOAS восполняет пробел. Запрос HATEOAS позволяет вам не только отправлять данные, но и указывать связанные
действия: см. DOC/REST_API/ARTICLE_IMAGE/5_IMG_15_GET_RESPONSE_JSON.png. Этот пример был в формате JSON. Формат
XML для другого примера будет выглядеть примерно так: см. DOC/REST_API/ARTICLE_IMAGE/5_IMG_16_GET_RESPONSE_XML.png.

Когда вы отправляете этот запрос для получения данных учетной записи, вы получаете оба:
- Номер счета и данные баланса;
- Ссылки, которые обеспечивают действия, чтобы сделать депозит/снятие/перевод/закрытие;

С HATEOAS запрос на REST ресурс дает мне как данные, так и действия, связанные с данными.

________________________________________________________________________________________________________________________
*** Зачем нам нужен HATEOAS? ***

Единственная самая важная причина для HATEOAS — слабая связь (loose coupling). Если потребителю службы REST необходимо
жестко закодировать все URL-адреса ресурсов, он тесно связан с реализацией вашей службы. Вместо этого, если вы вернете
URL-адреса, которые он может использовать для действий, он будет слабосвязанным. Нет строгой зависимости от структуры
URI, так как она указана и используется в ответе.

________________________________________________________________________________________________________________________
*** HAL — язык гипертекстовых приложений ***

При разработке службы RESTful необходимо указать, как возвращать данные и ссылки, соответствующие запросу. HAL — это
формат, который обеспечивает простой и согласованный способ гиперссылки между ресурсами в вашем REST API. Вот пример:
см. DOC/REST_API/ARTICLE_IMAGE/5_IMG_17_HAL_RESPONSE.png

С HAL у вас есть несколько категорий представлений:
- Links (Ссылки) - указано как комбинация;
- Target (Цель) - указана в качестве URI;
- Relation (Отношение) - имя;
- Embedded Resources (Встроенные ресурсы) - другие ресурсы, содержащиеся в данном REST ресурсе;
- State (Состояние) - фактические данные ресурса;

Если вам довелось использовать Spring Framework для разработки REST сервиса, то Spring HATEOAS — хороший механизм для
вашего сервиса.

________________________________________________________________________________________________________________________
*** Дополнительное чтение ***

REST + MongoDB + HATEOAS? - https://dzone.com/articles/rest-mongodb-hateoas

HATEOAS REST Services With Spring - https://dzone.com/articles/hypermedia-driven-rest-services-with-spring-hateoa

Spring HATEOAS: Hypermedia APIs with Spring - https://www.infoq.com/presentations/spring-hateoas-1/
________________________________________________________________________________________________________________________
См. комментарии к статье в русском исходнике.