# Используем вложенность, когда каждый модуль
# имеет свой префикс (в нашем случае это 'db:')
db:
  username: ${username.value:postgres}
  password: pass
  driver: PostgresDriver
  url: postgres:5432
  hosts: localhost,127.0.0.1
  pool:
    size: 12

spring.profiles.active: development,qa

# Префикс для работы с логерами (их настройки)
logging:
  # Зададим уровень логирования корневого логера
  level:
    # Будем фиксировать сообщения типа WARN (и все что выше ERROR и FATAL)
    root: INFO
    # Так же мы можем настроить логер для конкретного класса
    # Но в данном случае для всех классов пакета pool
    spring.oldboy.pool: INFO
    org.springframework.jdbc.core: TRACE
  # Записываем лог в файл
  file.name: Logs/oldboy.log

  # Настроим подключение к БД
spring:
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
    format:
      date: iso
  datasource:
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: pass
    driver-class-name: org.postgresql.Driver
  # Настроим свойства Hibernate
  jpa:
   properties.hibernate:
     batch_size: 50
     fetch_size: 50
     show_sql: true
     format_sql: true
    # Проверяем правильно ли мы настроили наши сущности в spring/oldboy/database/entity
    # См. ее XML аналог в:
    # https://github.com/JcoderPaul/Hibernate_Lessons/blob/master/Hibernate_part_1/src/main/resources/hibernate.cfg.xml
     hbm2ddl.auto: validate
   open-in-view: false
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: . . . Google client_id . . .
            clientSecret: . . . Google client_secret . . .
            redirectUri: http://localhost:8080/login/oauth2/code/google
            # Укажем какие права доступа будет иметь наше приложение,
            # также явно указываем openid, хотя данная настройка активна by default
            scope: openid,email,profile

  messages:
    basename: messages
    # Установим связь с файлом messages.properties, как с default messages локалью
    fallback-to-system-locale: false

springdoc:
  swagger-ui:
    oauth:
      client-id: . . . Google client_id . . .
      client-secret: . . . Google client_secret . . .
      scopes: openid,email,profile
      # Его мы указали при создании Credentials в сервисе Google
    oauth2-redirect-url: http://localhost:8080/swagger-ui/oauth2-redirect.html