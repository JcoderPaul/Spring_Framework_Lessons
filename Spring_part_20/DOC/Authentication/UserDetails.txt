См. исходник (ENG):
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/core/userdetails/UserDetails.html
________________________________________________________________________________________________________________________
****** Interface UserDetails ******

Пакет: org.springframework.security.core.userdetails

Все супер-интерфейсы: Serializable

Все под-интерфейсы: LdapUserDetails

Реализующие классы: InetOrgPerson,
                    LdapUserDetailsImpl,
                    Person,
                    User
________________________________________________________________________________________________________________________
public interface UserDetails extends Serializable
________________________________________________________________________________________________________________________
Предоставляет основную информацию о пользователе.

Реализации не используются непосредственно Spring Security в целях безопасности. Они просто хранят информацию о
пользователе, которая позже инкапсулируется в объекты аутентификации. Это позволяет хранить информацию пользователя,
не связанную с безопасностью (например, адреса электронной почты, номера телефонов и т. д.), в удобном месте.

Конкретные реализации должны уделять особое внимание обеспечению соблюдения ненулевого контракта, подробно описанного
для каждого метода. См. «User» для ознакомления с эталонной реализацией (которую вы, возможно, захотите расширить или
использовать в своем коде).

- Class User:
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/core/userdetails/User.html
________________________________________________________________________________________________________________________
См. так же пример:

- Serialized Form of User -
https://docs.spring.io/spring-security/site/docs/current/api/serialized-form.html#org.springframework.security.core.userdetails.User
________________________________________________________________________________________________________________________
*** Методы ***

- Collection<? extends GrantedAuthority> getAuthorities() - Возвращает полномочия, предоставленные пользователю.

- String getPassword() - Возвращает пароль, используемый для аутентификации пользователя.

- String getUsername() - Возвращает имя пользователя, используемое для аутентификации пользователя.

- boolean isAccountNonExpired() - Указывает, истек ли срок действия учетной записи пользователя.

- boolean isAccountNonLocked() - Указывает, заблокирован или разблокирован пользователь.

- boolean isCredentialsNonExpired() - Указывает, истек ли срок действия учетных данных пользователя (пароля).

- boolean isEnabled() - Указывает, включен или отключен пользователь.
________________________________________________________________________________________________________________________