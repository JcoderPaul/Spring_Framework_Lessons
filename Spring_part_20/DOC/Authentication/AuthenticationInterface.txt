См. исходник (ENG):
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/core/Authentication.html
________________________________________________________________________________________________________________________
****** Interface Authentication ******

Пакет: org.springframework.security.core

Все супер-интерфейсы: Principal,
                      Serializable
Все известные реализующие классы: AbstractAuthenticationToken,
                                  AbstractOAuth2TokenAuthenticationToken,
                                  AnonymousAuthenticationToken,
                                  BearerTokenAuthentication,
                                  BearerTokenAuthenticationToken,
                                  BearerTokenAuthenticationToken,
                                  CasAssertionAuthenticationToken,
                                  CasAuthenticationToken,
                                  CasServiceTicketAuthenticationToken,
                                  JaasAuthenticationToken,
                                  JwtAuthenticationToken,
                                  OAuth2AuthenticationToken,
                                  OAuth2AuthorizationCodeAuthenticationToken,
                                  OAuth2LoginAuthenticationToken,
                                  PreAuthenticatedAuthenticationToken,
                                  RememberMeAuthenticationToken,
                                  RunAsUserToken,
                                  Saml2Authentication,
                                  Saml2AuthenticationToken,
                                  TestingAuthenticationToken,
                                  UsernamePasswordAuthenticationToken

________________________________________________________________________________________________________________________

public interface Authentication extends Principal, Serializable

________________________________________________________________________________________________________________________
Представляет токен для запроса проверки подлинности или для участника, прошедшего проверку подлинности, после обработки
запроса методом AuthenticationManager.authenticate(Authentication), см.
https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/authentication/AuthenticationManager.html

После аутентификации запроса аутентификация обычно сохраняется в локальном потоке SecurityContext, управляемом
SecurityContextHolder с помощью используемого механизма аутентификации. Явная аутентификация может быть достигнута
без использования одного из механизмов аутентификации Spring Security, создав экземпляр аутентификации и используя
код:

************************************************************************************************************************
 SecurityContext context = SecurityContextHolder.createEmptyContext();
 context.setAuthentication(anAuthentication);
 SecurityContextHolder.setContext(context);
************************************************************************************************************************

!!! Обратите внимание !!! Если для свойства Authentication не установлено значение true, он все равно будет
аутентифицирован любым перехватчиком безопасности (для методов или веб-вызовов), который его встретит.

В большинстве случаев платформа прозрачно заботится об управлении контекстом безопасности и объектами
аутентификации за вас.

________________________________________________________________________________________________________________________
*** Методы ***

- Collection<? extends GrantedAuthority> getAuthorities() - Устанавливается AuthenticationManager для указания
                                                            полномочий, предоставленных принципалу.

!!! Обратите внимание !!! Классы не должны полагаться на это значение как на допустимое, если оно не установлено
доверенным AuthenticationManager.

Реализации должны гарантировать, что изменения в возвращаемом массиве коллекции не влияют на состояние объекта
аутентификации или не используют неизменяемый экземпляр.

Возвращает: Полномочия, предоставленные принципалу, или пустую коллекцию, если токен не был аутентифицирован.
            Никогда не возвращает null.

________________________________________________________________________________________________________________________
- Object getCredentials() - Учетные данные, подтверждающие правильность принципала. Обычно это пароль, но может
                            быть и что угодно, относящееся к AuthenticationManager. Ожидается, что вызывающие
                            абоненты заполнят учетные данные.

                            Возвращает: Полномочия, удостоверяющие личность принципала.

________________________________________________________________________________________________________________________
- Object getDetails() - Хранит дополнительные сведения о запросе аутентификации. Это может быть IP-адрес, серийный номер
                        сертификата и т.д.

                        Возвращает: Дополнительные сведения о запросе аутентификации или значение null, если не
                                    используется.

________________________________________________________________________________________________________________________
- Object getPrincipal() - Личность аутентифицируемого принципала. В случае запроса аутентификации с именем пользователя
                          и паролем это будет имя пользователя. Ожидается, что вызывающие стороны заполнят субъект для
                          запроса аутентификации.

Реализация AuthenticationManager часто возвращает аутентификацию, содержащую более подробную информацию, в качестве
принципала для использования приложением. Многие поставщики аутентификации создают объект UserDetails в качестве
субъекта.

Возвращает: Принципала аутентифицируемого или аутентифицированный принципал после аутентификации.

________________________________________________________________________________________________________________________
- boolean isAuthenticated() - Используется для указания AbstractSecurityInterceptor-у следует ли предоставлять
                              токен аутентификации для AuthenticationManager-а. Обычно AuthenticationManager (или,
                              чаще, один из его AuthenticationProviders) возвращает неизменяемый токен аутентификации
                              после успешной аутентификации, и в этом случае этот токен может безопасно вернуть true
                              этому методу.

                              Возврат true повысит производительность, поскольку вызов AuthenticationManager для
                              каждого запроса больше не понадобится.

По соображениям безопасности реализации этого интерфейса должны быть очень осторожны при возврате true из этого метода,
если только они не являются неизменяемыми или не имеют какого-либо способа гарантировать, что свойства не были изменены
с момента первоначального создания.

Возвращает: True, если токен был аутентифицирован и AbstractSecurityInterceptor не нужно снова представлять токен
            AuthenticationManager для повторной аутентификации.

________________________________________________________________________________________________________________________
- void setAuthenticated(boolean isAuthenticated) - См isAuthenticated(). полное описание. Реализации всегда должны
                                                   позволять вызывать этот метод с параметром false, поскольку он
                                                   используется различными классами для указания того, что токену
                                                   аутентификации не следует доверять.

Если реализация желает отклонить вызов с параметром true (который указывает на то, что токену аутентификации доверяют,
что представляет собой потенциальную угрозу безопасности), реализация должна выдать исключение IllegalArgumentException.

Параметры: isAuthenticated — true, если токену следует доверять (что может привести к исключению), или false, если
           токену нельзя доверять.

Исключения: IllegalArgumentException — если попытка сделать токен аутентификации доверенным (путем передачи true в
            качестве аргумента) отклонена из-за того, что реализация является неизменяемой или реализует собственный
            альтернативный подход к isAuthenticated().

________________________________________________________________________________________________________________________
Методы, унаследованные от интерфейса java.security.Principal: equals, getName, hashCode, implies, toString
________________________________________________________________________________________________________________________
