****** Class DefaultHandlerExceptionResolver ******
________________________________________________________________________________________________________________________
Пакет: org.springframework.web.servlet.mvc.support

java.lang.Object
  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver
    org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver

Все реализованные интерфейсы: Ordered,
                              HandlerExceptionResolver

См. так же: ResponseEntityExceptionHandler
________________________________________________________________________________________________________________________
public class DefaultHandlerExceptionResolver
            extends AbstractHandlerExceptionResolver
________________________________________________________________________________________________________________________
Реализация по умолчанию интерфейса HandlerExceptionResolver, разрешающая стандартные исключения Spring MVC и
преобразующая их в соответствующие коды состояния HTTP.

Этот преобразователь исключений включен по умолчанию в общем Spring DispatcherServlet.

-- Поддерживаемые исключения --

--------------------------------------------------------------------------
Exception	                            | HTTP Status Code
--------------------------------------------------------------------------
HttpRequestMethodNotSupportedException  | 405 (SC_METHOD_NOT_ALLOWED)
HttpMediaTypeNotSupportedException      | 415 (SC_UNSUPPORTED_MEDIA_TYPE)
HttpMediaTypeNotAcceptableException     | 406 (SC_NOT_ACCEPTABLE)
MissingPathVariableException            | 500 (SC_INTERNAL_SERVER_ERROR)
MissingServletRequestParameterException | 400 (SC_BAD_REQUEST)
MissingServletRequestPartException      | 400 (SC_BAD_REQUEST)
ServletRequestBindingException          | 400 (SC_BAD_REQUEST)
ConversionNotSupportedException         | 500 (SC_INTERNAL_SERVER_ERROR)
TypeMismatchException                   | 400 (SC_BAD_REQUEST)
HttpMessageNotReadableException         | 400 (SC_BAD_REQUEST)
HttpMessageNotWritableException         | 500 (SC_INTERNAL_SERVER_ERROR)
MethodArgumentNotValidException         | 400 (SC_BAD_REQUEST)
BindException                           | 400 (SC_BAD_REQUEST)
NoHandlerFoundException                 | 404 (SC_NOT_FOUND)
AsyncRequestTimeoutException            | 503 (SC_SERVICE_UNAVAILABLE)
--------------------------------------------------------------------------

________________________________________________________________________________________________________________________
*** Поля ***

- static final String PAGE_NOT_FOUND_LOG_CATEGORY - Категория журнала, которая будет использоваться, если для запроса не
                                                    найден сопоставленный обработчик.

- protected static final Log pageNotFoundLogger - Дополнительный регистратор, который будет использоваться, если для
                                                  запроса не найден сопоставленный обработчик.
________________________________________________________________________________________________________________________
Поля, унаследованные от класса org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: logger

Поля, унаследованные от интерфейса org.springframework.core.Ordered: HIGHEST_PRECEDENCE,
                                                                     LOWEST_PRECEDENCE
________________________________________________________________________________________________________________________
*** Конструкторы ***

- DefaultHandlerExceptionResolver() - Устанавливает порядокOrdered.LOWEST_PRECEDENCE . _
________________________________________________________________________________________________________________________
*** Методы ***

- protected ModelAndView doResolveException(HttpServletRequest request,
                                            HttpServletResponse response,
                                            Object handler,
                                            Exception ex) - Фактически разрешите данное исключение, возникшее во время
                                                            выполнения обработчика, вернув ModelAndView при необходимости
                                                            значение, представляющее конкретную страницу ошибки.

- protected ModelAndView handleAsyncRequestTimeoutException(AsyncRequestTimeoutException ex,
                                                            HttpServletRequest request,
                                                            HttpServletResponse response,
                                                            Object handler) - Обработайте случай, когда истекло время
                                                                              ожидания асинхронного запроса.

- protected ModelAndView handleBindException(BindException ex,
                                             HttpServletRequest request,
                                             HttpServletResponse response,
                                             Object handler) - Устарело, подлежит удалению: этот элемент API может быть
                                                               удален в будущей версии. Начиная с версии 6.0, поскольку
                                                               ModelAttributeMethodProcessor теперь вместо этого
                                                               создается MethodArgumentNotValidException подкласс.

- protected ModelAndView handleConversionNotSupported(ConversionNotSupportedException ex,
                                                      HttpServletRequest request,
                                                      HttpServletResponse response,
                                                      Object handler) - Обработайте случай, когда WebDataBinder
                                                                        преобразование не может произойти.

- protected ModelAndView handleErrorResponse(ErrorResponse errorResponse,
                                             HttpServletRequest request,
                                             HttpServletResponse response,
                                             Object handler) - Обработка ErrorResponse исключения.

- protected ModelAndView handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,
                                                          HttpServletRequest request,
                                                          HttpServletResponse response,
                                                          Object handler) - Обработайте случай, когда не найдены
                                                                            преобразователи сообщений, приемлемые для
                                                                            клиента (выраженные через Accept заголовок).

- protected ModelAndView handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,
                                                         HttpServletRequest request,
                                                         HttpServletResponse response,
                                                         Object handler) - Обработайте случай, когда не были найдены
                                                                           преобразователи сообщений для содержимого
                                                                           PUT или POST.

- protected ModelAndView handleHttpMessageNotReadable(HttpMessageNotReadableException ex,
                                                      HttpServletRequest request,
                                                      HttpServletResponse response,
                                                      Object handler) - Обработайте случай, когда конвертер сообщений не
                                                                        может прочитать HTTP-запрос.

- protected ModelAndView handleHttpMessageNotWritable(HttpMessageNotWritableException ex,
                                                      HttpServletRequest request,
                                                      HttpServletResponse response,
                                                      Object handler) - Обработайте случай, когда преобразователь
                                                                        сообщений не может записать HTTP-запрос.

- protected ModelAndView handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,
                                                             HttpServletRequest request,
                                                             HttpServletResponse response,
                                                             Object handler) - Обработайте случай, когда для метода HTTP
                                                                               не найден обработчик.

- protected ModelAndView handleMethodArgumentNotValidException(MethodArgumentNotValidException ex,
                                                               HttpServletRequest request,
                                                               HttpServletResponse response,
                                                               Object handler) - Обработайте случай, когда аргумент,
                                                                                 помеченный знаком @Valid или,
                                                                                 RequestBody или RequestPart проходит
                                                                                 проверку.

- protected ModelAndView handleMissingPathVariable(MissingPathVariableException ex,
                                                   HttpServletRequest request,
                                                   HttpServletResponse response,
                                                   Object handler) - Обработайте случай, когда объявленная переменная
                                                                     пути не соответствует ни одной извлеченной
                                                                     переменной URI.

- protected ModelAndView handleMissingServletRequestParameter(MissingServletRequestParameterException ex,
                                                              HttpServletRequest request,
                                                              HttpServletResponse response,
                                                              Object handler) - Обработайте случай, когда требуемый
                                                                                параметр отсутствует.

- protected ModelAndView handleMissingServletRequestPartException(MissingServletRequestPartException ex,
                                                                  HttpServletRequest request,
                                                                  HttpServletResponse response,
                                                                  Object handler) - Обработайте случай, когда
                                                                                    @RequestPart, a MultipartFile или
                                                                                    jakarta.servlet.http.Part аргумент
                                                                                    необходимы, но отсутствуют.

- protected ModelAndView handleNoHandlerFoundException(NoHandlerFoundException ex,
                                                       HttpServletRequest request,
                                                       HttpServletResponse response,
                                                       Object handler) - Обработайте случай, когда во время отправки
                                                                         обработчик не был найден.

- protected ModelAndView handleServletRequestBindingException(ServletRequestBindingException ex,
                                                              HttpServletRequest request,
                                                              HttpServletResponse response,
                                                              Object handler) - Обработайте случай, когда возникает
                                                                                неисправимое исключение привязки.

- protected ModelAndView handleTypeMismatch(TypeMismatchException ex,
                                            HttpServletRequest request,
                                            HttpServletResponse response,
                                            Object handler) - Обработайте случай, когда WebDataBinder возникает ошибка
                                                              преобразования.

- protected void sendServerError(Exception ex,
                                 HttpServletRequest request,
                                 HttpServletResponse response) - Вызван для отправки ошибки сервера.
________________________________________________________________________________________________________________________
Методы, унаследованные от класса org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver:
buildLogMessage, getOrder, hasHandlerMappings, logException, prepareResponse, preventCaching, resolveException,
setMappedHandlerClasses, setMappedHandlers, setOrder, setPreventResponseCaching, setWarnLogCategory,
shouldApplyTo

Методы, унаследованные от класса java.lang.Object: clone, equals, finalize, getClass, hashCode, notify, notifyAll,
                                                   toString, wait
________________________________________________________________________________________________________________________
См. оригинал (ENG):
https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.html
________________________________________________________________________________________________________________________